---
import { getTranslations } from "../utils/i18n";

interface Props {
  image: string;
  mark: string;
  link: string;
  lang?: string;
}

const { image, mark, link, lang } = Astro.props;

// 获取当前语言环境和翻译
const currentLocale = lang || Astro.currentLocale || 'en';
const { t } = await getTranslations(currentLocale);
---

<div id="exit-popup" class="fixed inset-0 bg-black/50 z-50 hidden items-center justify-center">
  <div class="bg-white rounded-lg p-6 max-w-sm w-full mx-4 relative">
    <button id="close-popup" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
    
    <div class="flex flex-col items-center">
      <img src={`/uploads/${image}`} alt="Product" class="w-full h-48 object-cover rounded-t-lg mb-4" />
      <h3 class="text-2xl font-bold text-gray-800 mb-2">{t('popup.exclusive_offer')}</h3>
      <div class="bg-amber-50 text-xs font-semibold outline-1 outline-orange-400 outline-dashed py-1 px-2 rounded mb-4">
        {mark}
      </div>
      <a href={link} class="w-full text-center bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-4 rounded transition-colors relative group">
        <span class="relative">
          {t('buttons.check_availability')}
          <span class="absolute -top-1 -right-1 w-2 h-2 bg-yellow-300 rounded-full animate-pulse group-hover:animate-none"></span>
        </span>
      </a>
    </div>
  </div>
</div>

<script>
  let popupShown = false;
  const popup = document.getElementById('exit-popup');
  const closeButton = document.getElementById('close-popup');
  
  // 检查是否已经显示过弹窗
  function hasShownPopup() {
    return localStorage.getItem('exitPopupShown') === 'true';
  }
  
  // 设置弹窗已显示
  function setPopupShown() {
    localStorage.setItem('exitPopupShown', 'true');
  }
  
  // 显示弹窗
  function showPopup() {
    if (!popupShown && !hasShownPopup()) {
      popup?.classList.remove('hidden');
      popup?.classList.add('flex');
      popupShown = true;
      setPopupShown();
    }
  }
  
  // 关闭弹窗
  function closePopup() {
    popup?.classList.add('hidden');
    popup?.classList.remove('flex');
    popupShown = false; // 重置状态，允许再次显示
  }
  
  // PC端：鼠标移动到顶部触发
  let mouseY = 0;
  document.addEventListener('mousemove', (e) => {
    mouseY = e.clientY;
    if (mouseY < 20) { // 鼠标移动到顶部50px范围内
      showPopup();
    }
  });
  
  // 移动端：visibilitychange触发，仅在屏幕宽度小于768px时生效
  function isMobile() {
    return window.innerWidth < 768;
  }
  document.addEventListener('visibilitychange', () => {
    if (isMobile() && document.visibilityState === 'hidden') {
      showPopup();
    }
  });
  
  // 关闭按钮事件
  closeButton?.addEventListener('click', closePopup);
  
  // 点击弹窗外部关闭
  popup?.addEventListener('click', (e) => {
    if (e.target === popup) {
      closePopup();
    }
  });
</script> 